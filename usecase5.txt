                        			USECASE 5

1 Write an SQL query to display the book details with the respective author name.

SELECT BOOK.NAME,BOOK.ISBN,BOOK.EDITION,AUTHOR.FIRST_NAME,AUTHOR.LAST_NAME FROM BOOK JOIN BOOK_DETAILS ON BOOK.ID=BOOK_DETAILS.BOOK_ID JOIN AUTHOR ON AUTHOR.ID=BOOK_DETAILS.AUTHOR_ID;

2  Write an SQL query to find out the books with the word ‘programming’ in their names.

SELECT BOOK.NAME AS BOOK_NAME,AUTHOR.ID AS AUTHOR_ID,AUTHOR.FIRST_NAME AS AUTHOR_NAME FROM BOOK JOIN BOOK_DETAILS ON BOOK.ID=BOOK_DETAILS.BOOK_ID JOIN AUTHOR ON AUTHOR.ID=BOOK_DETAILS.AUTHOR_ID WHERE BOOK.NAME LIKE '%programming%' order by BOOK.NAME;

3 Find the books that are not returned before the due date.
SELECT BOOK.NAME AS BOOK_NAME,CASE WHEN BOOK_REQUEST.IS_ACTIVE=0 THEN BOOK_REQUEST.DUE_DATE END AS DUE_DATE,CUSTOMER_LIB.NAME FROM BOOK JOIN BOOK_REQUEST ON BOOK.ID=BOOK_REQUEST.BOOK_ID JOIN CUSTOMER_LIB ON CUSTOMER_LIB.ID=BOOK_REQUEST.CUSTOMER_ID WHERE BOOK_REQUEST.IS_ACTIVE=0;

4.Find all the unique entries in the book table.

SELECT DISTINCT NAME ,ISBN, EDITION FROM BOOK;


5.Write an SQL query to display the book name, customer name and librarian name (first 50% of the records).

SELECT  BOOK.NAME AS BOOK_NAME,CUSTOMER_LIB.NAME AS CUSTOMER_NAME,LIBRARIANS.NAME AS LIBRARIAN_NAME FROM BOOK JOIN BOOK_REQUEST ON BOOK.ID=BOOK_REQUEST.BOOK_ID JOIN CUSTOMER_LIB ON CUSTOMER_LIB.ID=BOOK_REQUEST.CUSTOMER_ID JOIN LIBRARIANS ON BOOK_REQUEST.LIBRARIAN_ID=LIBRARIANS.ID limit 3;

6 Calculate the fine amount (Rs.1 per day if it exceeds the due date) for the books borrowed. Display the total fine amount for all the customers.

SELECT CUSTOMER_LIB.ID, CUSTOMER_LIB.NAME, SUM(IF(CUSTOMER_LIB.ID IN (SELECT BOOK_REQUEST.CUSTOMER_ID), (IF(BOOK_REQUEST.IS_ACTIVE='0', DATEDIFF('2021-01-20',BOOK_REQUEST.DUE_DATE),0)),0)) AS FINE_AMOUNT FROM CUSTOMER_LIB as CUSTOMER_LIB LEFT JOIN BOOK_REQUEST ON CUSTOMER_LIB.ID=BOOK_REQUEST.CUSTOMER_ID GROUP BY CUSTOMER_LIB.ID;





7.Write an SQL query to display the librarian name and number of books they distributed to the customers

SELECT LIBRARIANS.NAME AS LIBRARIAN_NAME,COUNT(BOOK_REQUEST.LIBRARIAN_ID) AS NO_OF_BOOK FROM BOOK_REQUEST JOIN LIBRARIANS ON BOOK_REQUEST.LIBRARIAN_ID=LIBRARIANS.ID GROUP BY LIBRARIAN_ID;






8.Find the customer who has borrowed multiple copies of the same book. 

SELECT CUSTOMER_LIB.NAME AS CUSTOMER_NAME,BOOK.NAME AS BOOK_NAME,BOOK.EDITION AS BOOK_EDITION,AUTHOR.FIRST_NAME FROM CUSTOMER_LIB JOIN BOOK_REQUEST ON CUSTOMER_LIB.ID=BOOK_REQUEST.CUSTOMER_ID JOIN BOOK_DETAILS ON BOOK_REQUEST.BOOK_ID=BOOK_DETAILS.BOOK_ID JOIN BOOK ON BOOK_DETAILS.BOOK_ID=BOOK.ID JOIN AUTHOR ON BOOK_DETAILS.AUTHOR_ID=AUTHOR.ID GROUP BY BOOK.NAME,CUSTOMER_LIB.NAME HAVING COUNT(BOOK.NAME)>1;



9.Find the customers who haven’t borrowed any books from the library. Display the table as given below. 

SELECT ID,NAME,ADDRESS FROM CUSTOMER_LIB WHERE ID NOT IN(SELECT CUSTOMER_ID FROM BOOK_REQUEST) ORDER BY NAME DESC;







